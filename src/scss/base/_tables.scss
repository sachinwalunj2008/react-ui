// TODO: remove this style from existing tables. Use .dataTable from _table.module.scss instead
// standard table styling
.data-table {
  width: 100%;
  border-collapse: collapse;
  font-size: 12px;

  tr {
    // if tr has specific background color applied - don't want the background changing on hover
    &:not([class*='bgc-']) {
      &:hover {
        background-color: var(--faint-gray);
      }
    }
    &:not(.table-list-header):not(:last-child):not(.no-bottom-border) {
      border-bottom: 1px solid var(--light-gray);
    }
    transition: background-color 250ms ease-out;
  }

  tr.custom-header,
  tr.table-loader {
    border-bottom: 0;
    &:hover {
      background: var(--white);
    }
    td:not([class^='p-']):not([class^='px-']):not([class^='py-']) {
      padding: 0;
    }
  }

  tr.no-padding {
    td:not([class^='p-']):not([class^='px-']):not([class^='py-']) {
      padding: 0;
    }
  }

  td:not([class^='p-']):not([class^='px-']):not([class^='py-']) {
    padding: 16px 8px;
  }
}

/**
* @deprecated table-list-header class should not be used anymore as all tables with be replaced with the Table component
**/
.table-list-header {
  font-weight: var(--font-weight-semibold);
  font-size: var(--font-size-xs);
  color: var(--purple);
  &:hover {
    background: var(--white);
  }
  th {
    z-index: 1;
    padding: 8px;
    background: var(--white);
  }
  &:not(.table-header-sticky) {
    th {
      border-bottom: 2px solid var(--purple);
    }
  }
}
:root {
  --top-sticky: 164px;
}
.table-header-sticky {
  th {
    position: sticky;
    box-shadow: 0px 2px 0px 0px var(--purple);
    top: var(--top-sticky);
  }
}

// TODO: unused class, remove when all tables are updated to use _table.module.scss
// for when you want ellipsis (...) to happen instead of wrapping the content of long text when screen size is smaller or table has a lot of columns
// note that this also has the side effect of changing column widths as well to not be auto-sized based on content - they'll be either what you set for "width" or just all the same width.
.data-table-nowrap {
  table-layout: fixed;
  white-space: nowrap;

  td,
  td * {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// unused
// will make the content of the last td of each row float right to give it the appearance of more space
// .data-table-last-col-space {
//   td:last-child > * {
//     float: right;
//   }
// }

// copied over to _table.module.scss, remove when all tables are updated
//for checkboxes that gets added in first column
// .sticky-table
//   .sticky-table-table
//   .sticky-table-row.sticky-table-header
//   .sticky-table-cell.checkbox_width {
//   width: 18px;
// }

// .sticky-table
//   .sticky-table-table
//   .sticky-table-row:not(.sticky-table-header)
//   .sticky-table-cell.checkbox_width {
//   width: 18px;
// }

// // copied over to _table.module.scss, remove when all tables are updated
// // Sticky Table
// .sticky-table {
//   &.show-scrollbar {
//     &::-webkit-scrollbar {
//       width: 0;
//       height: 8px;
//       background: var(--light-purple);
//     }
//     &::-webkit-scrollbar-thumb {
//       border-radius: 8px;
//       box-shadow: inset 0 0 6px var(--purple);
//       background: var(--purple);
//     }
//   }
//   .sticky-table-table {
//     white-space: normal;
//     .sticky-table-row.sticky-table-header .sticky-table-cell {
//       background: var(--white);
//       border-bottom: 2px solid var(--purple);
//       white-space: nowrap;
//     }
//     .sticky-table-row:not(.sticky-table-header) {
//       &:hover {
//         background-color: var(--faint-gray);
//         transition: background-color 0.25s ease-in-out;
//       }
//     }
//     .sticky-table-row:not(.sticky-table-header) {
//       .sticky-table-cell {
//         border-bottom: 1px solid var(--light-gray);
//       }
//       &:last-of-type .sticky-table-cell {
//         border-bottom: none;
//       }
//     }
//     .sticky-table-row {
//       .sticky-table-cell {
//         background: var(--white);
//         padding: 16px 8px;
//         font-size: var(--font-size-xs);
//         vertical-align: middle;
//         width: 100%;
//       }
//       // This is taken from _mixins.scss and is needed because the styles from this sticky table library are very specific and hard to override. With this here, we can have the full range of background colors for our table cells if needed.
//       @each $item in $bgColors {
//         @include generate(
//           bgc,
//           background-color,
//           nth($item, 1),
//           nth($item, 2),
//           ''
//         );
//       }
//     }
//   }
// }
// copied over to _table.module.scss, remove when all tables are updated
// .show-sticky-classes {
//   .sticky-table {
//     .sticky-table-row {
//       .sticky-table-cell {
//         &.last-sticky-cell-left {
//           border-right: 1px solid var(--medium-gray);
//           box-shadow: 8px 0px 5px -2px var(--light-gray);
//         }
//         &.first-sticky-cell-right {
//           border-left: 1px solid var(--medium-gray);
//           box-shadow: -8px 0px 5px -2px var(--light-gray);
//         }
//         &.extra-left-padding {
//           padding-left: 16px;
//         }
//       }
//     }
//   }
// }
